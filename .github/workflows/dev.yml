name: dev

on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11

      - name: Cache ~/.cache
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-coursier-${{ hashFiles('project/Libs.scala') }}
          restore-keys: |
            ${{ runner.os }}-coursier-

      - name: Cache ~/.sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
          registry-url: "https://registry.npmjs.org"

      - name: Cache ~/.npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build - AAS
        working-directory: ./csw-aas-js
        run: |
          npm ci
          npm run lint 
          npm run build

      - name: Test - AAS
        working-directory: ./csw-aas-js
        run: npm test

      - name: Build - Config App
        working-directory: ./csw-aas-js-examples/config-app
        run: |
          npm ci
          npm run build

      - name: Build - Example App
        working-directory: ./csw-aas-js-examples/example-app
        run: |
          npm ci
          npm run build

      - name: Selenium Test
        run: sbt clean test

      - name: Build Status
        if: always()
        id: status
        run: |
          if [[ ${{job.status}} == Success ]]
          then
          echo ::set-output name=title::'SUCCESS'
          echo ::set-output name=color::'#00FF00'
          else
          echo ::set-output name=title::'FAILURE'
          echo ::set-output name=color::'#FF0000'
          fi

      - name: Notify slack
        if: always()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"#csw-build\", \"attachments\": [ { \"title\":\"${{ steps.status.outputs.title }}\", \"text\": \"[ ${{ github.event.repository.name }} ] : [ ${{ github.workflow }} ] : [ ${{ github.ref }} ] \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id s}}\", \"color\": \"${{ steps.status.outputs.color }}\" } ]}'
